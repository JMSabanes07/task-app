import React, { useState, useRef } from 'react'
import useSWR from "swr"
import Head from 'next/head'

import Table from '../components/table'

export default function Home() {
	const [task, setTask] = useState('');
	const [idTask, setIdTask] = useState('');
	const [data, setData] = useState([]);
	const [editMode, setEditMode] = useState(false)
	const inputRef = useRef(null)
	
	const handleEdit = async (e) => {
		const id = e.target.getAttribute('data-key')
		const task = e.target.getAttribute('data-task')

		setIdTask(id)
		setEditMode(true)
		setTask(task)

		inputRef.current.focus()
	}

	const handleCancelEdit = () => {
		setEditMode(false)
		setIdTask('')
		setTask('')
	}

	const handleDelete = async (e) => {
		const id = e.target.getAttribute('data-key')
		const res = await fetch(`/api/clientes/${id}`, {
			method: "DELETE",
		})
		setData(await res.json())
	}

	const handleTask = (e) => {
		setTask(e.target.value)
	}
	const handleSubmit = async (e) => {
		e.preventDefault();

		if(editMode){
			const res = await fetch(`/api/clientes/${idTask}`, {
				method: "PUT",
				body: JSON.stringify({
					task
				}),
				headers: {'Content-Type': 'application/json'}
			})
			setData(await res.json())

			setTask('')
			setIdTask('')
			handleCancelEdit()
		}else{
			const res = await fetch("/api/clientes", {
				method: 'POST',
				body: JSON.stringify({
					task
				}),
				headers: { 'Content-Type': 'application/json'}
			})
	
			setData(await res.json())
			setTask('')
		}

	}
	
	useSWR("tasks", async () => {
		const res = await fetch("/api/clientes")
		const data = await res.json()
		setData(data)
	})

	return (
		<div>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
				
			</Head>

			<main className="index-main">
				<form className="index-main-form" onSubmit={handleSubmit}>
					<input ref={inputRef} id="input-task" className="input-text" type="text" value={task} placeholder='Escribe tus tareas' onChange={handleTask}/>
					<div className="btn-container">
						<button className="btn">{!editMode ? '+ Agregar' : 'Editar'}</button>
						{
							editMode ? <button className="btn btn-cancel" onClick={handleCancelEdit}>Cancelar</button> : ''
						}
					</div>
					
				</form>
				<Table data={data} handleDelete={handleDelete} handleEdit={handleEdit} />
			</main>
		</div>
	)
}
